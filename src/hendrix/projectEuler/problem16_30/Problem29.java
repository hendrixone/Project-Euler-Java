package hendrix.projectEuler.problem16_30;

import java.math.BigDecimal;
import java.util.HashSet;

/**
 * Description:
 * Problem29, NAME
 * Consider all integer combinations of ab for 2 ≤ a ≤ 5 and 2 ≤ b ≤ 5:
 * <p>
 * 2^2=4, 2^3=8, 2^4=16, 2^5=32
 * 3^2=9, 3^3=27, 3^4=81, 3^5=243
 * 4^2=16, 4^3=64, 4^4=256, 4^5=1024
 * 5^2=25, 5^3=125, 5^4=625, 5^5=3125
 * If they are then placed in numerical order, with any repeats removed, we get the following sequence of 15 distinct terms:
 * <p>
 * 4, 8, 9, 16, 25, 27, 32, 64, 81, 125, 243, 256, 625, 1024, 3125
 * <p>
 * How many distinct terms are in the sequence generated by ab for 2 ≤ a ≤ 100 and 2 ≤ b ≤ 100?
 */
public class Problem29 {
    /*
    Using the hashCode mechanism. We can put all powers as BigDecimal into a hashSet which automatically removed any repeated term
    (Since same each BigDecimal would have an unique hashcode)
    */
    private static String solve() {
        HashSet<BigDecimal> set = new HashSet<>();
        for (int i = 2; i < 101; i++) {
            for (int j = 2; j < 101; j++) {
                set.add(new BigDecimal(i).pow(j));
            }
        }
        return Integer.toString(set.size());
    }

    public static void main(String[] args) {
        long startTime = System.nanoTime();
        String result = solve();
        long endTime = System.nanoTime();
        System.out.println("Answer: " + result + "\nProcess took " + (endTime - startTime) / (1000 * 1000) + "ms to execute");
    }
}
/*
Answer: 9183
Process took 23ms to execute
*/